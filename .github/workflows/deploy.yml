name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push RTMP server
        uses: docker/build-push-action@v5
        with:
          context: ./apps/rtmp-server
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rtmp:latest

      - name: Build and push WebSocket server
        uses: docker/build-push-action@v5
        with:
          context: ./apps/websocket-server
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/websocket:latest

      - name: Build and push Web app
        uses: docker/build-push-action@v5
        with:
          context: ./apps/web
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/web:latest

      - name: Generate production docker-compose
        run: |
          cat > docker-compose.prod.yml << EOL
          services:
            rtmp:
              image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rtmp:latest
              ports:
                - "1935:1935"
              environment:
                - GLADIA_API_KEY=\${GLADIA_API_KEY}
                - WEBHOOK_URL=http://websocket:8000/webhook
              depends_on:
                - websocket
              restart: unless-stopped

            websocket:
              image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/websocket:latest
              ports:
                - "8000:8000"
              environment:
                - PORT=8000
              restart: unless-stopped

            web:
              image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/web:latest
              ports:
                - "3000:3000"
              environment:
                - NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws/transcription
              depends_on:
                - websocket
              restart: unless-stopped

          networks:
            default:
              name: rtmp-network
          EOL

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HETZNER_HOST }}
          username: ${{ secrets.HETZNER_USERNAME }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          source: "docker-compose.prod.yml,.env.example"
          target: "/opt/rtmp-host"
          strip_components: 0

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HETZNER_HOST }}
          username: ${{ secrets.HETZNER_USERNAME }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          script: |
            cd /opt/rtmp-host
            echo "GLADIA_API_KEY=${{ secrets.GLADIA_API_KEY }}" > .env
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d