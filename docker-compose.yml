version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=rtmp
      - POSTGRES_PASSWORD=rtmp
      - POSTGRES_DB=rtmp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rtmp"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rtmp:
    build:
      context: ./apps/rtmp-server
      dockerfile: Dockerfile
    ports:
      - "1935:1935"
    env_file:
      - .env
    environment:
      - WEBHOOK_URL=http://websocket:8000/webhook
      - DATABASE_URL=postgresql://rtmp:rtmp@postgres:5432/rtmp
    depends_on:
      postgres:
        condition: service_healthy
      websocket:
        condition: service_started
    restart: unless-stopped

  websocket:
    build:
      context: ./apps/websocket-server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PORT=8000
      - DATABASE_URL=postgresql://rtmp:rtmp@postgres:5432/rtmp
      - MASTRA_API_URL=http://mastra:3001
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/service-account.json
      - GOOGLE_CLOUD_BUCKET_NAME=rtmp-documents
      - CHROMA_TENANT=your-tenant
      - CHROMA_DATABASE=your-database
      - CHROMA_API_KEY=your-api-key
    volumes:
      - ./apps/websocket-server/credentials/service-account.json:/app/credentials/service-account.json
      - chromadb_data:/data/chromadb
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  migrations:
    build:
      context: ./apps/websocket-server
      dockerfile: Dockerfile
    command: python -malembic upgrade head
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://rtmp:rtmp@postgres:5432/rtmp
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  chromadb_data:

networks:
  default:
    name: rtmp-network 