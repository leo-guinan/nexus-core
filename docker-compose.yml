version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=rtmp
      - POSTGRES_PASSWORD=rtmp
      - POSTGRES_DB=rtmp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rtmp"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rtmp:
    build:
      context: ./apps/rtmp-server
      dockerfile: Dockerfile
    ports:
      - "1935:1935"
    environment:
      - GLADIA_API_KEY=${GLADIA_API_KEY}
      - WEBHOOK_URL=http://websocket:8000/webhook
      - DATABASE_URL=postgresql://rtmp:rtmp@postgres:5432/rtmp
    depends_on:
      postgres:
        condition: service_healthy
      websocket:
        condition: service_started
    restart: unless-stopped

  websocket:
    build:
      context: ./apps/websocket-server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - DATABASE_URL=postgresql://rtmp:rtmp@postgres:5432/rtmp
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  mastra:
    build:
      context: .
      dockerfile: apps/agent/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=production
      - LOG_LEVEL=info
      - DATABASE_URL=postgresql://rtmp:rtmp@postgres:5432/rtmp
    depends_on:
      postgres:
        condition: service_healthy
      websocket:
        condition: service_started
    restart: unless-stopped

  migrations:
    build:
      context: ./apps/websocket-server
      dockerfile: Dockerfile
    command: python -malembic upgrade head
    environment:
      - DATABASE_URL=postgresql://rtmp:rtmp@postgres:5432/rtmp
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:

networks:
  default:
    name: rtmp-network 